-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions
-- and other software and tools, and its AMPP partner logic
-- functions, and any output files from any of the foregoing
-- (including device programming or simulation files), and any
-- associated documentation or information are expressly subject
-- to the terms and conditions of the Altera Program License
-- Subscription Agreement, Altera MegaCore Function License
-- Agreement, or other applicable license agreement, including,
-- without limitation, that your use is for the sole purpose of
-- programming logic devices manufactured by Altera and sold by
-- Altera or its authorized distributors.  Please refer to the
-- applicable agreement for further details.


-- Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
-- Created on Wed Nov 04 09:01:32 2015

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;


--  Entity Declaration

ENTITY PWM IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		clk : IN STD_LOGIC;
		rst : IN STD_LOGIC;
		pwm_input : IN STD_LOGIC_VECTOR(15 downto 0);
		opwm : OUT STD_LOGIC
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!

END PWM;


--  Architecture Body

ARCHITECTURE PWM_architecture OF PWM IS
signal scount : std_logic_vector (15 downto 0);
BEGIN 

PROCESS (rst,clk)
BEGIN
if rst = '1' then
	scount <= (others => '0');
	opwm <= '0';
elsif clk = '1' AND clk'event then
	if scount <= 50000 then
		if scount <=pwm_input  then
			opwm <= '1';
		else
			opwm <= '0';
		end if;
		scount <= scount + '1';
	else
		scount <= (others => '0');
	end if;
end if;
end process;
END PWM_architecture;
